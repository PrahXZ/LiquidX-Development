package net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.specials

import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.event.UpdateEvent
import net.ccbluex.liquidbounce.event.WorldEvent
import net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.DisablerMode
import net.ccbluex.liquidbounce.features.value.*
import net.ccbluex.liquidbounce.utils.PacketUtils
import net.minecraft.network.play.client.C03PacketPlayer
import net.minecraft.network.play.client.C07PacketPlayerDigging
import net.minecraft.network.play.client.C0BPacketEntityAction
import net.minecraft.util.BlockPos
import net.minecraft.util.EnumFacing

class KokscraftDisabler : DisablerMode("Kokscraft") {

    val keepsprint = BoolValue("Combat", true)

    private var c03Counter = 0


    override fun onEnable() {
        c03Counter = -15
    }
    override fun onWorld(event: WorldEvent) {
        c03Counter = -15
    }

    override fun onUpdate(event: UpdateEvent) {
        if (keepsprint.get()) {
            mc.netHandler.addToSendQueue(C0BPacketEntityAction(mc.thePlayer, C0BPacketEntityAction.Action.START_SPRINTING))
            mc.netHandler.addToSendQueue(C0BPacketEntityAction(mc.thePlayer, C0BPacketEntityAction.Action.STOP_SPRINTING))
        }
    }

    override fun onPacket(event: PacketEvent) {
        val packet = event.packet

        if (packet is C03PacketPlayer) {
            c03Counter++
            if (packet.isMoving) {
                if (c03Counter >= 6) {
                    PacketUtils.sendPacketNoEvent(
                            C07PacketPlayerDigging(C07PacketPlayerDigging.Action.STOP_DESTROY_BLOCK,
                                     BlockPos.ORIGIN, EnumFacing.DOWN)
                    )
                    c03Counter = 0
                } else if (c03Counter == 6 - 2) {
                    PacketUtils.sendPacketNoEvent(
                            C07PacketPlayerDigging(C07PacketPlayerDigging.Action.START_DESTROY_BLOCK,
                                    BlockPos.ORIGIN, EnumFacing.DOWN)
                    )
                }
            }
        }

    }
}