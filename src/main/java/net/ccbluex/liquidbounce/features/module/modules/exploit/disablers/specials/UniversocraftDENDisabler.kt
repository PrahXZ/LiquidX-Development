package net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.specials

import net.ccbluex.liquidbounce.LiquidBounce
import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.event.UpdateEvent
import net.ccbluex.liquidbounce.event.WorldEvent
import net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.DisablerMode
import net.ccbluex.liquidbounce.features.module.modules.movement.Speed
import net.ccbluex.liquidbounce.features.module.modules.world.BlatantScaffold
import net.ccbluex.liquidbounce.utils.MovementUtils
import net.ccbluex.liquidbounce.utils.PacketUtils
import net.ccbluex.liquidbounce.utils.Rotation
import net.ccbluex.liquidbounce.utils.RotationUtils
import net.minecraft.network.play.client.C03PacketPlayer
import net.minecraft.network.play.client.C07PacketPlayerDigging
import net.minecraft.network.play.client.C0FPacketConfirmTransaction
import net.minecraft.util.BlockPos
import net.minecraft.util.EnumFacing

class UniversocraftDENDisabler : DisablerMode("UniversocraftDEN") {

    private var C03Value = 0
    private var UID = 0

    override fun onEnable() {
        C03Value = -15
        UID = 0
    }
    override fun onWorld(event: WorldEvent) {
        C03Value = -15
        UID = 0
    }

    override fun onUpdate(event: UpdateEvent) {
        if (LiquidBounce.moduleManager[Speed::class.java]!!.state && !LiquidBounce.moduleManager[BlatantScaffold::class.java]!!.state) {
            val limitedRotation = RotationUtils.limitAngleChange(RotationUtils.serverRotation, Rotation(MovementUtils.movingYaw, mc.thePlayer.rotationPitch), 120F)
            RotationUtils.setTargetRotation(limitedRotation, 10)
        }
    }


    override fun onPacket(event: PacketEvent) {
        val packet = event.packet

        if (packet is C0FPacketConfirmTransaction) {
            if (mc.thePlayer.onGround) {
                UID = packet.getUid().toInt()
            } else {
                packet.uid = (UID - 2).toShort()
            }
        }

        if (packet is C03PacketPlayer) {
            C03Value++
            if (packet.isMoving) {
                if (C03Value >= 6) {
                    PacketUtils.sendPacketNoEvent(
                            C07PacketPlayerDigging(C07PacketPlayerDigging.Action.STOP_DESTROY_BLOCK, BlockPos.ORIGIN , EnumFacing.DOWN)
                    )
                    C03Value = 0
                } else if (C03Value == 6 - 2) {
                    PacketUtils.sendPacketNoEvent(
                            C07PacketPlayerDigging(C07PacketPlayerDigging.Action.START_DESTROY_BLOCK,
                                    BlockPos.ORIGIN, EnumFacing.DOWN)
                    )
                }
            }
        }
    }
}